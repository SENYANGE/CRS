// Generated by view binder compiler. Do not edit!
package com.example.crs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crs.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button updateProf;

  @NonNull
  public final CircleImageView visitProfileImage;

  @NonNull
  public final TextView visitProfileStatus;

  @NonNull
  public final TextView visitUserName;

  private ActivityProfileBinding(@NonNull RelativeLayout rootView, @NonNull Button updateProf,
      @NonNull CircleImageView visitProfileImage, @NonNull TextView visitProfileStatus,
      @NonNull TextView visitUserName) {
    this.rootView = rootView;
    this.updateProf = updateProf;
    this.visitProfileImage = visitProfileImage;
    this.visitProfileStatus = visitProfileStatus;
    this.visitUserName = visitUserName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.update_prof;
      Button updateProf = ViewBindings.findChildViewById(rootView, id);
      if (updateProf == null) {
        break missingId;
      }

      id = R.id.visit_profile_image;
      CircleImageView visitProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (visitProfileImage == null) {
        break missingId;
      }

      id = R.id.visit_profile_status;
      TextView visitProfileStatus = ViewBindings.findChildViewById(rootView, id);
      if (visitProfileStatus == null) {
        break missingId;
      }

      id = R.id.visit_user_name;
      TextView visitUserName = ViewBindings.findChildViewById(rootView, id);
      if (visitUserName == null) {
        break missingId;
      }

      return new ActivityProfileBinding((RelativeLayout) rootView, updateProf, visitProfileImage,
          visitProfileStatus, visitUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
